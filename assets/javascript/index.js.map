{"version":3,"sources":["index.js"],"names":[],"mappingsfile":"index.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"__webpack_require__(1);\\nmodule.exports = __webpack_require__(2);\\n\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** multi main\\n ** module id = 0\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///multi_main?\");\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\teval(\"\\\"use strict\\\";\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/assets/javascript/vendor.js\\n ** module id = 1\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/assets/javascript/vendor.js?\");\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.SOCRATES = undefined;\\n\\nvar _documentRouting = __webpack_require__(3);\\n\\nvar _documentRouting2 = _interopRequireDefault(_documentRouting);\\n\\nvar _masonry = __webpack_require__(4);\\n\\nvar _masonry2 = _interopRequireDefault(_masonry);\\n\\nvar _resizeTextarea = __webpack_require__(12);\\n\\nvar _resizeTextarea2 = _interopRequireDefault(_resizeTextarea);\\n\\nvar _scroller = __webpack_require__(13);\\n\\nvar _scroller2 = _interopRequireDefault(_scroller);\\n\\nvar _spy = __webpack_require__(14);\\n\\nvar _spy2 = _interopRequireDefault(_spy);\\n\\nvar _toggler = __webpack_require__(15);\\n\\nvar _toggler2 = _interopRequireDefault(_toggler);\\n\\nvar _validator = __webpack_require__(16);\\n\\nvar _validator2 = _interopRequireDefault(_validator);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nvar SOCRATES = exports.SOCRATES = {\\n  common: {\\n    init: function init() {}\\n  },\\n\\n  main: {\\n    init: function init() {\\n      _masonry2.default.init();\\n      _resizeTextarea2.default.init();\\n      _scroller2.default.init();\\n      _spy2.default.init();\\n      _toggler2.default.init();\\n      _validator2.default.init();\\n    }\\n  },\\n\\n  post: {\\n    init: function init() {\\n      _toggler2.default.init();\\n    }\\n  }\\n};\\n\\ndocument.addEventListener('DOMContentLoaded', function () {\\n  _documentRouting2.default.init(SOCRATES);\\n});\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/assets/javascript/main.js\\n ** module id = 2\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/assets/javascript/main.js?\");\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.documentRouting = documentRouting;\\n/**\\n * http://www.paulirish.com/2009/markup-based-unobtrusive-comprehensive-dom-ready-execution/\\n * https://www.viget.com/articles/extending-paul-irishs-comprehensive-dom-ready-execution\\n */\\n\\nfunction documentRouting() {\\n  var SITE_NAME = void 0;\\n  function exec(controller, _action) {\\n    var namespace = SITE_NAME;\\n    var action = typeof _action === 'undefined' ? 'init' : _action;\\n\\n    if (controller !== '' && namespace[controller] && typeof namespace[controller][action] === 'function') {\\n      namespace[controller][action]();\\n    }\\n  }\\n\\n  return {\\n    init: function init(NAME) {\\n      SITE_NAME = NAME;\\n      var body = document.body;\\n      var controller = body.getAttribute('data-controller');\\n      var action = body.getAttribute('data-action');\\n      exec('common');\\n      exec(controller);\\n      exec(controller, action);\\n    }\\n  };\\n}\\n\\nexports.default = documentRouting();\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/assets/javascript/utils/documentRouting.js\\n ** module id = 3\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/assets/javascript/utils/documentRouting.js?\");\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _masonryLayout = __webpack_require__(5);\\n\\nvar _masonryLayout2 = _interopRequireDefault(_masonryLayout);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction masonry() {\\n  var defaults = {\\n    container: document.getElementById('gallery'),\\n    layoutDelay: 500,\\n    config: {\\n      itemSelector: '.gallery__item',\\n      percentPosition: true,\\n      masonry: {\\n        columnWidth: '.gallery__sizer'\\n      }\\n    }\\n  };\\n  var s = void 0;\\n  var mason = void 0;\\n  var timer = void 0;\\n\\n  function callLayout() {\\n    mason.layout();\\n  }\\n\\n  function handleResize() {\\n    clearTimeout(timer);\\n    timer = setTimeout(function () {\\n      callLayout();\\n    }, s.layoutDelay);\\n  }\\n\\n  function bindUIActions() {\\n    window.addEventListener('resize', handleResize, false);\\n  }\\n\\n  return {\\n    init: function init(opts) {\\n      s = Object.assign({}, defaults, opts);\\n      mason = new _masonryLayout2.default(s.container, s.config);\\n      bindUIActions();\\n    }\\n  };\\n}\\n\\nexports.default = masonry();\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/assets/javascript/factories/masonry.js\\n ** module id = 4\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/assets/javascript/factories/masonry.js?\");\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol ? \\\"symbol\\\" : typeof obj; };\\n\\n/*!\\n * Masonry v4.1.0\\n * Cascading grid layout library\\n * http://masonry.desandro.com\\n * MIT License\\n * by David DeSandro\\n */\\n\\n(function (window, factory) {\\n  // universal module definition\\n  /* jshint strict: false */ /*globals define, module, require */\\n  if (true) {\\n    // AMD\\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(6), __webpack_require__(8)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\\n  } else if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) == 'object' && module.exports) {\\n    // CommonJS\\n    module.exports = factory(require('outlayer'), require('get-size'));\\n  } else {\\n    // browser global\\n    window.Masonry = factory(window.Outlayer, window.getSize);\\n  }\\n})(window, function factory(Outlayer, getSize) {\\n\\n  'use strict';\\n\\n  // -------------------------- masonryDefinition -------------------------- //\\n\\n  // create an Outlayer layout class\\n\\n  var Masonry = Outlayer.create('masonry');\\n  // isFitWidth -> fitWidth\\n  Masonry.compatOptions.fitWidth = 'isFitWidth';\\n\\n  Masonry.prototype._resetLayout = function () {\\n    this.getSize();\\n    this._getMeasurement('columnWidth', 'outerWidth');\\n    this._getMeasurement('gutter', 'outerWidth');\\n    this.measureColumns();\\n\\n    // reset column Y\\n    this.colYs = [];\\n    for (var i = 0; i < this.cols; i++) {\\n      this.colYs.push(0);\\n    }\\n\\n    this.maxY = 0;\\n  };\\n\\n  Masonry.prototype.measureColumns = function () {\\n    this.getContainerWidth();\\n    // if columnWidth is 0, default to outerWidth of first item\\n    if (!this.columnWidth) {\\n      var firstItem = this.items[0];\\n      var firstItemElem = firstItem && firstItem.element;\\n      // columnWidth fall back to item of first element\\n      this.columnWidth = firstItemElem && getSize(firstItemElem).outerWidth ||\\n      // if first elem has no width, default to size of container\\n      this.containerWidth;\\n    }\\n\\n    var columnWidth = this.columnWidth += this.gutter;\\n\\n    // calculate columns\\n    var containerWidth = this.containerWidth + this.gutter;\\n    var cols = containerWidth / columnWidth;\\n    // fix rounding errors, typically with gutters\\n    var excess = columnWidth - containerWidth % columnWidth;\\n    // if overshoot is less than a pixel, round up, otherwise floor it\\n    var mathMethod = excess && excess < 1 ? 'round' : 'floor';\\n    cols = Math[mathMethod](cols);\\n    this.cols = Math.max(cols, 1);\\n  };\\n\\n  Masonry.prototype.getContainerWidth = function () {\\n    // container is parent if fit width\\n    var isFitWidth = this._getOption('fitWidth');\\n    var container = isFitWidth ? this.element.parentNode : this.element;\\n    // check that this.size and size are there\\n    // IE8 triggers resize on body size change, so they might not be\\n    var size = getSize(container);\\n    this.containerWidth = size && size.innerWidth;\\n  };\\n\\n  Masonry.prototype._getItemLayoutPosition = function (item) {\\n    item.getSize();\\n    // how many columns does this brick span\\n    var remainder = item.size.outerWidth % this.columnWidth;\\n    var mathMethod = remainder && remainder < 1 ? 'round' : 'ceil';\\n    // round if off by 1 pixel, otherwise use ceil\\n    var colSpan = Math[mathMethod](item.size.outerWidth / this.columnWidth);\\n    colSpan = Math.min(colSpan, this.cols);\\n\\n    var colGroup = this._getColGroup(colSpan);\\n    // get the minimum Y value from the columns\\n    var minimumY = Math.min.apply(Math, colGroup);\\n    var shortColIndex = colGroup.indexOf(minimumY);\\n\\n    // position the brick\\n    var position = {\\n      x: this.columnWidth * shortColIndex,\\n      y: minimumY\\n    };\\n\\n    // apply setHeight to necessary columns\\n    var setHeight = minimumY + item.size.outerHeight;\\n    var setSpan = this.cols + 1 - colGroup.length;\\n    for (var i = 0; i < setSpan; i++) {\\n      this.colYs[shortColIndex + i] = setHeight;\\n    }\\n\\n    return position;\\n  };\\n\\n  /**\\n   * @param {Number} colSpan - number of columns the element spans\\n   * @returns {Array} colGroup\\n   */\\n  Masonry.prototype._getColGroup = function (colSpan) {\\n    if (colSpan < 2) {\\n      // if brick spans only one column, use all the column Ys\\n      return this.colYs;\\n    }\\n\\n    var colGroup = [];\\n    // how many different places could this brick fit horizontally\\n    var groupCount = this.cols + 1 - colSpan;\\n    // for each group potential horizontal position\\n    for (var i = 0; i < groupCount; i++) {\\n      // make an array of colY values for that one group\\n      var groupColYs = this.colYs.slice(i, i + colSpan);\\n      // and get the max value of the array\\n      colGroup[i] = Math.max.apply(Math, groupColYs);\\n    }\\n    return colGroup;\\n  };\\n\\n  Masonry.prototype._manageStamp = function (stamp) {\\n    var stampSize = getSize(stamp);\\n    var offset = this._getElementOffset(stamp);\\n    // get the columns that this stamp affects\\n    var isOriginLeft = this._getOption('originLeft');\\n    var firstX = isOriginLeft ? offset.left : offset.right;\\n    var lastX = firstX + stampSize.outerWidth;\\n    var firstCol = Math.floor(firstX / this.columnWidth);\\n    firstCol = Math.max(0, firstCol);\\n    var lastCol = Math.floor(lastX / this.columnWidth);\\n    // lastCol should not go over if multiple of columnWidth #425\\n    lastCol -= lastX % this.columnWidth ? 0 : 1;\\n    lastCol = Math.min(this.cols - 1, lastCol);\\n    // set colYs to bottom of the stamp\\n\\n    var isOriginTop = this._getOption('originTop');\\n    var stampMaxY = (isOriginTop ? offset.top : offset.bottom) + stampSize.outerHeight;\\n    for (var i = firstCol; i <= lastCol; i++) {\\n      this.colYs[i] = Math.max(stampMaxY, this.colYs[i]);\\n    }\\n  };\\n\\n  Masonry.prototype._getContainerSize = function () {\\n    this.maxY = Math.max.apply(Math, this.colYs);\\n    var size = {\\n      height: this.maxY\\n    };\\n\\n    if (this._getOption('fitWidth')) {\\n      size.width = this._getContainerFitWidth();\\n    }\\n\\n    return size;\\n  };\\n\\n  Masonry.prototype._getContainerFitWidth = function () {\\n    var unusedCols = 0;\\n    // count unused columns\\n    var i = this.cols;\\n    while (--i) {\\n      if (this.colYs[i] !== 0) {\\n        break;\\n      }\\n      unusedCols++;\\n    }\\n    // fit container to columns that have been used\\n    return (this.cols - unusedCols) * this.columnWidth - this.gutter;\\n  };\\n\\n  Masonry.prototype.needsResizeLayout = function () {\\n    var previousWidth = this.containerWidth;\\n    this.getContainerWidth();\\n    return previousWidth != this.containerWidth;\\n  };\\n\\n  return Masonry;\\n});\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./~/masonry-layout/masonry.js\\n ** module id = 5\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./~/masonry-layout/masonry.js?\");\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol ? \\\"symbol\\\" : typeof obj; };\\n\\n/*!\\n * Outlayer v2.1.0\\n * the brains and guts of a layout library\\n * MIT license\\n */\\n\\n(function (window, factory) {\\n  'use strict';\\n  // universal module definition\\n  /* jshint strict: false */ /* globals define, module, require */\\n\\n  if (true) {\\n    // AMD - RequireJS\\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(7), __webpack_require__(8), __webpack_require__(9), __webpack_require__(11)], __WEBPACK_AMD_DEFINE_RESULT__ = function (EvEmitter, getSize, utils, Item) {\\n      return factory(window, EvEmitter, getSize, utils, Item);\\n    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\\n  } else if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) == 'object' && module.exports) {\\n    // CommonJS - Browserify, Webpack\\n    module.exports = factory(window, require('ev-emitter'), require('get-size'), require('fizzy-ui-utils'), require('./item'));\\n  } else {\\n    // browser global\\n    window.Outlayer = factory(window, window.EvEmitter, window.getSize, window.fizzyUIUtils, window.Outlayer.Item);\\n  }\\n})(window, function factory(window, EvEmitter, getSize, utils, Item) {\\n  'use strict';\\n\\n  // ----- vars ----- //\\n\\n  var console = window.console;\\n  var jQuery = window.jQuery;\\n  var noop = function noop() {};\\n\\n  // -------------------------- Outlayer -------------------------- //\\n\\n  // globally unique identifiers\\n  var GUID = 0;\\n  // internal store of all Outlayer intances\\n  var instances = {};\\n\\n  /**\\n   * @param {Element, String} element\\n   * @param {Object} options\\n   * @constructor\\n   */\\n  function Outlayer(element, options) {\\n    var queryElement = utils.getQueryElement(element);\\n    if (!queryElement) {\\n      if (console) {\\n        console.error('Bad element for ' + this.constructor.namespace + ': ' + (queryElement || element));\\n      }\\n      return;\\n    }\\n    this.element = queryElement;\\n    // add jQuery\\n    if (jQuery) {\\n      this.$element = jQuery(this.element);\\n    }\\n\\n    // options\\n    this.options = utils.extend({}, this.constructor.defaults);\\n    this.option(options);\\n\\n    // add id for Outlayer.getFromElement\\n    var id = ++GUID;\\n    this.element.outlayerGUID = id; // expando\\n    instances[id] = this; // associate via id\\n\\n    // kick it off\\n    this._create();\\n\\n    var isInitLayout = this._getOption('initLayout');\\n    if (isInitLayout) {\\n      this.layout();\\n    }\\n  }\\n\\n  // settings are for internal use only\\n  Outlayer.namespace = 'outlayer';\\n  Outlayer.Item = Item;\\n\\n  // default options\\n  Outlayer.defaults = {\\n    containerStyle: {\\n      position: 'relative'\\n    },\\n    initLayout: true,\\n    originLeft: true,\\n    originTop: true,\\n    resize: true,\\n    resizeContainer: true,\\n    // item options\\n    transitionDuration: '0.4s',\\n    hiddenStyle: {\\n      opacity: 0,\\n      transform: 'scale(0.001)'\\n    },\\n    visibleStyle: {\\n      opacity: 1,\\n      transform: 'scale(1)'\\n    }\\n  };\\n\\n  var proto = Outlayer.prototype;\\n  // inherit EvEmitter\\n  utils.extend(proto, EvEmitter.prototype);\\n\\n  /**\\n   * set options\\n   * @param {Object} opts\\n   */\\n  proto.option = function (opts) {\\n    utils.extend(this.options, opts);\\n  };\\n\\n  /**\\n   * get backwards compatible option value, check old name\\n   */\\n  proto._getOption = function (option) {\\n    var oldOption = this.constructor.compatOptions[option];\\n    return oldOption && this.options[oldOption] !== undefined ? this.options[oldOption] : this.options[option];\\n  };\\n\\n  Outlayer.compatOptions = {\\n    // currentName: oldName\\n    initLayout: 'isInitLayout',\\n    horizontal: 'isHorizontal',\\n    layoutInstant: 'isLayoutInstant',\\n    originLeft: 'isOriginLeft',\\n    originTop: 'isOriginTop',\\n    resize: 'isResizeBound',\\n    resizeContainer: 'isResizingContainer'\\n  };\\n\\n  proto._create = function () {\\n    // get items from children\\n    this.reloadItems();\\n    // elements that affect layout, but are not laid out\\n    this.stamps = [];\\n    this.stamp(this.options.stamp);\\n    // set container style\\n    utils.extend(this.element.style, this.options.containerStyle);\\n\\n    // bind resize method\\n    var canBindResize = this._getOption('resize');\\n    if (canBindResize) {\\n      this.bindResize();\\n    }\\n  };\\n\\n  // goes through all children again and gets bricks in proper order\\n  proto.reloadItems = function () {\\n    // collection of item elements\\n    this.items = this._itemize(this.element.children);\\n  };\\n\\n  /**\\n   * turn elements into Outlayer.Items to be used in layout\\n   * @param {Array or NodeList or HTMLElement} elems\\n   * @returns {Array} items - collection of new Outlayer Items\\n   */\\n  proto._itemize = function (elems) {\\n\\n    var itemElems = this._filterFindItemElements(elems);\\n    var Item = this.constructor.Item;\\n\\n    // create new Outlayer Items for collection\\n    var items = [];\\n    for (var i = 0; i < itemElems.length; i++) {\\n      var elem = itemElems[i];\\n      var item = new Item(elem, this);\\n      items.push(item);\\n    }\\n\\n    return items;\\n  };\\n\\n  /**\\n   * get item elements to be used in layout\\n   * @param {Array or NodeList or HTMLElement} elems\\n   * @returns {Array} items - item elements\\n   */\\n  proto._filterFindItemElements = function (elems) {\\n    return utils.filterFindElements(elems, this.options.itemSelector);\\n  };\\n\\n  /**\\n   * getter method for getting item elements\\n   * @returns {Array} elems - collection of item elements\\n   */\\n  proto.getItemElements = function () {\\n    return this.items.map(function (item) {\\n      return item.element;\\n    });\\n  };\\n\\n  // ----- init & layout ----- //\\n\\n  /**\\n   * lays out all items\\n   */\\n  proto.layout = function () {\\n    this._resetLayout();\\n    this._manageStamps();\\n\\n    // don't animate first layout\\n    var layoutInstant = this._getOption('layoutInstant');\\n    var isInstant = layoutInstant !== undefined ? layoutInstant : !this._isLayoutInited;\\n    this.layoutItems(this.items, isInstant);\\n\\n    // flag for initalized\\n    this._isLayoutInited = true;\\n  };\\n\\n  // _init is alias for layout\\n  proto._init = proto.layout;\\n\\n  /**\\n   * logic before any new layout\\n   */\\n  proto._resetLayout = function () {\\n    this.getSize();\\n  };\\n\\n  proto.getSize = function () {\\n    this.size = getSize(this.element);\\n  };\\n\\n  /**\\n   * get measurement from option, for columnWidth, rowHeight, gutter\\n   * if option is String -> get element from selector string, & get size of element\\n   * if option is Element -> get size of element\\n   * else use option as a number\\n   *\\n   * @param {String} measurement\\n   * @param {String} size - width or height\\n   * @private\\n   */\\n  proto._getMeasurement = function (measurement, size) {\\n    var option = this.options[measurement];\\n    var elem;\\n    if (!option) {\\n      // default to 0\\n      this[measurement] = 0;\\n    } else {\\n      // use option as an element\\n      if (typeof option == 'string') {\\n        elem = this.element.querySelector(option);\\n      } else if (option instanceof HTMLElement) {\\n        elem = option;\\n      }\\n      // use size of element, if element\\n      this[measurement] = elem ? getSize(elem)[size] : option;\\n    }\\n  };\\n\\n  /**\\n   * layout a collection of item elements\\n   * @api public\\n   */\\n  proto.layoutItems = function (items, isInstant) {\\n    items = this._getItemsForLayout(items);\\n\\n    this._layoutItems(items, isInstant);\\n\\n    this._postLayout();\\n  };\\n\\n  /**\\n   * get the items to be laid out\\n   * you may want to skip over some items\\n   * @param {Array} items\\n   * @returns {Array} items\\n   */\\n  proto._getItemsForLayout = function (items) {\\n    return items.filter(function (item) {\\n      return !item.isIgnored;\\n    });\\n  };\\n\\n  /**\\n   * layout items\\n   * @param {Array} items\\n   * @param {Boolean} isInstant\\n   */\\n  proto._layoutItems = function (items, isInstant) {\\n    this._emitCompleteOnItems('layout', items);\\n\\n    if (!items || !items.length) {\\n      // no items, emit event with empty array\\n      return;\\n    }\\n\\n    var queue = [];\\n\\n    items.forEach(function (item) {\\n      // get x/y object from method\\n      var position = this._getItemLayoutPosition(item);\\n      // enqueue\\n      position.item = item;\\n      position.isInstant = isInstant || item.isLayoutInstant;\\n      queue.push(position);\\n    }, this);\\n\\n    this._processLayoutQueue(queue);\\n  };\\n\\n  /**\\n   * get item layout position\\n   * @param {Outlayer.Item} item\\n   * @returns {Object} x and y position\\n   */\\n  proto._getItemLayoutPosition = function () /* item */{\\n    return {\\n      x: 0,\\n      y: 0\\n    };\\n  };\\n\\n  /**\\n   * iterate over array and position each item\\n   * Reason being - separating this logic prevents 'layout invalidation'\\n   * thx @paul_irish\\n   * @param {Array} queue\\n   */\\n  proto._processLayoutQueue = function (queue) {\\n    this.updateStagger();\\n    queue.forEach(function (obj, i) {\\n      this._positionItem(obj.item, obj.x, obj.y, obj.isInstant, i);\\n    }, this);\\n  };\\n\\n  // set stagger from option in milliseconds number\\n  proto.updateStagger = function () {\\n    var stagger = this.options.stagger;\\n    if (stagger === null || stagger === undefined) {\\n      this.stagger = 0;\\n      return;\\n    }\\n    this.stagger = getMilliseconds(stagger);\\n    return this.stagger;\\n  };\\n\\n  /**\\n   * Sets position of item in DOM\\n   * @param {Outlayer.Item} item\\n   * @param {Number} x - horizontal position\\n   * @param {Number} y - vertical position\\n   * @param {Boolean} isInstant - disables transitions\\n   */\\n  proto._positionItem = function (item, x, y, isInstant, i) {\\n    if (isInstant) {\\n      // if not transition, just set CSS\\n      item.goTo(x, y);\\n    } else {\\n      item.stagger(i * this.stagger);\\n      item.moveTo(x, y);\\n    }\\n  };\\n\\n  /**\\n   * Any logic you want to do after each layout,\\n   * i.e. size the container\\n   */\\n  proto._postLayout = function () {\\n    this.resizeContainer();\\n  };\\n\\n  proto.resizeContainer = function () {\\n    var isResizingContainer = this._getOption('resizeContainer');\\n    if (!isResizingContainer) {\\n      return;\\n    }\\n    var size = this._getContainerSize();\\n    if (size) {\\n      this._setContainerMeasure(size.width, true);\\n      this._setContainerMeasure(size.height, false);\\n    }\\n  };\\n\\n  /**\\n   * Sets width or height of container if returned\\n   * @returns {Object} size\\n   *   @param {Number} width\\n   *   @param {Number} height\\n   */\\n  proto._getContainerSize = noop;\\n\\n  /**\\n   * @param {Number} measure - size of width or height\\n   * @param {Boolean} isWidth\\n   */\\n  proto._setContainerMeasure = function (measure, isWidth) {\\n    if (measure === undefined) {\\n      return;\\n    }\\n\\n    var elemSize = this.size;\\n    // add padding and border width if border box\\n    if (elemSize.isBorderBox) {\\n      measure += isWidth ? elemSize.paddingLeft + elemSize.paddingRight + elemSize.borderLeftWidth + elemSize.borderRightWidth : elemSize.paddingBottom + elemSize.paddingTop + elemSize.borderTopWidth + elemSize.borderBottomWidth;\\n    }\\n\\n    measure = Math.max(measure, 0);\\n    this.element.style[isWidth ? 'width' : 'height'] = measure + 'px';\\n  };\\n\\n  /**\\n   * emit eventComplete on a collection of items events\\n   * @param {String} eventName\\n   * @param {Array} items - Outlayer.Items\\n   */\\n  proto._emitCompleteOnItems = function (eventName, items) {\\n    var _this = this;\\n    function onComplete() {\\n      _this.dispatchEvent(eventName + 'Complete', null, [items]);\\n    }\\n\\n    var count = items.length;\\n    if (!items || !count) {\\n      onComplete();\\n      return;\\n    }\\n\\n    var doneCount = 0;\\n    function tick() {\\n      doneCount++;\\n      if (doneCount == count) {\\n        onComplete();\\n      }\\n    }\\n\\n    // bind callback\\n    items.forEach(function (item) {\\n      item.once(eventName, tick);\\n    });\\n  };\\n\\n  /**\\n   * emits events via EvEmitter and jQuery events\\n   * @param {String} type - name of event\\n   * @param {Event} event - original event\\n   * @param {Array} args - extra arguments\\n   */\\n  proto.dispatchEvent = function (type, event, args) {\\n    // add original event to arguments\\n    var emitArgs = event ? [event].concat(args) : args;\\n    this.emitEvent(type, emitArgs);\\n\\n    if (jQuery) {\\n      // set this.$element\\n      this.$element = this.$element || jQuery(this.element);\\n      if (event) {\\n        // create jQuery event\\n        var $event = jQuery.Event(event);\\n        $event.type = type;\\n        this.$element.trigger($event, args);\\n      } else {\\n        // just trigger with type if no event available\\n        this.$element.trigger(type, args);\\n      }\\n    }\\n  };\\n\\n  // -------------------------- ignore & stamps -------------------------- //\\n\\n  /**\\n   * keep item in collection, but do not lay it out\\n   * ignored items do not get skipped in layout\\n   * @param {Element} elem\\n   */\\n  proto.ignore = function (elem) {\\n    var item = this.getItem(elem);\\n    if (item) {\\n      item.isIgnored = true;\\n    }\\n  };\\n\\n  /**\\n   * return item to layout collection\\n   * @param {Element} elem\\n   */\\n  proto.unignore = function (elem) {\\n    var item = this.getItem(elem);\\n    if (item) {\\n      delete item.isIgnored;\\n    }\\n  };\\n\\n  /**\\n   * adds elements to stamps\\n   * @param {NodeList, Array, Element, or String} elems\\n   */\\n  proto.stamp = function (elems) {\\n    elems = this._find(elems);\\n    if (!elems) {\\n      return;\\n    }\\n\\n    this.stamps = this.stamps.concat(elems);\\n    // ignore\\n    elems.forEach(this.ignore, this);\\n  };\\n\\n  /**\\n   * removes elements to stamps\\n   * @param {NodeList, Array, or Element} elems\\n   */\\n  proto.unstamp = function (elems) {\\n    elems = this._find(elems);\\n    if (!elems) {\\n      return;\\n    }\\n\\n    elems.forEach(function (elem) {\\n      // filter out removed stamp elements\\n      utils.removeFrom(this.stamps, elem);\\n      this.unignore(elem);\\n    }, this);\\n  };\\n\\n  /**\\n   * finds child elements\\n   * @param {NodeList, Array, Element, or String} elems\\n   * @returns {Array} elems\\n   */\\n  proto._find = function (elems) {\\n    if (!elems) {\\n      return;\\n    }\\n    // if string, use argument as selector string\\n    if (typeof elems == 'string') {\\n      elems = this.element.querySelectorAll(elems);\\n    }\\n    elems = utils.makeArray(elems);\\n    return elems;\\n  };\\n\\n  proto._manageStamps = function () {\\n    if (!this.stamps || !this.stamps.length) {\\n      return;\\n    }\\n\\n    this._getBoundingRect();\\n\\n    this.stamps.forEach(this._manageStamp, this);\\n  };\\n\\n  // update boundingLeft / Top\\n  proto._getBoundingRect = function () {\\n    // get bounding rect for container element\\n    var boundingRect = this.element.getBoundingClientRect();\\n    var size = this.size;\\n    this._boundingRect = {\\n      left: boundingRect.left + size.paddingLeft + size.borderLeftWidth,\\n      top: boundingRect.top + size.paddingTop + size.borderTopWidth,\\n      right: boundingRect.right - (size.paddingRight + size.borderRightWidth),\\n      bottom: boundingRect.bottom - (size.paddingBottom + size.borderBottomWidth)\\n    };\\n  };\\n\\n  /**\\n   * @param {Element} stamp\\n  **/\\n  proto._manageStamp = noop;\\n\\n  /**\\n   * get x/y position of element relative to container element\\n   * @param {Element} elem\\n   * @returns {Object} offset - has left, top, right, bottom\\n   */\\n  proto._getElementOffset = function (elem) {\\n    var boundingRect = elem.getBoundingClientRect();\\n    var thisRect = this._boundingRect;\\n    var size = getSize(elem);\\n    var offset = {\\n      left: boundingRect.left - thisRect.left - size.marginLeft,\\n      top: boundingRect.top - thisRect.top - size.marginTop,\\n      right: thisRect.right - boundingRect.right - size.marginRight,\\n      bottom: thisRect.bottom - boundingRect.bottom - size.marginBottom\\n    };\\n    return offset;\\n  };\\n\\n  // -------------------------- resize -------------------------- //\\n\\n  // enable event handlers for listeners\\n  // i.e. resize -> onresize\\n  proto.handleEvent = utils.handleEvent;\\n\\n  /**\\n   * Bind layout to window resizing\\n   */\\n  proto.bindResize = function () {\\n    window.addEventListener('resize', this);\\n    this.isResizeBound = true;\\n  };\\n\\n  /**\\n   * Unbind layout to window resizing\\n   */\\n  proto.unbindResize = function () {\\n    window.removeEventListener('resize', this);\\n    this.isResizeBound = false;\\n  };\\n\\n  proto.onresize = function () {\\n    this.resize();\\n  };\\n\\n  utils.debounceMethod(Outlayer, 'onresize', 100);\\n\\n  proto.resize = function () {\\n    // don't trigger if size did not change\\n    // or if resize was unbound. See #9\\n    if (!this.isResizeBound || !this.needsResizeLayout()) {\\n      return;\\n    }\\n\\n    this.layout();\\n  };\\n\\n  /**\\n   * check if layout is needed post layout\\n   * @returns Boolean\\n   */\\n  proto.needsResizeLayout = function () {\\n    var size = getSize(this.element);\\n    // check that this.size and size are there\\n    // IE8 triggers resize on body size change, so they might not be\\n    var hasSizes = this.size && size;\\n    return hasSizes && size.innerWidth !== this.size.innerWidth;\\n  };\\n\\n  // -------------------------- methods -------------------------- //\\n\\n  /**\\n   * add items to Outlayer instance\\n   * @param {Array or NodeList or Element} elems\\n   * @returns {Array} items - Outlayer.Items\\n  **/\\n  proto.addItems = function (elems) {\\n    var items = this._itemize(elems);\\n    // add items to collection\\n    if (items.length) {\\n      this.items = this.items.concat(items);\\n    }\\n    return items;\\n  };\\n\\n  /**\\n   * Layout newly-appended item elements\\n   * @param {Array or NodeList or Element} elems\\n   */\\n  proto.appended = function (elems) {\\n    var items = this.addItems(elems);\\n    if (!items.length) {\\n      return;\\n    }\\n    // layout and reveal just the new items\\n    this.layoutItems(items, true);\\n    this.reveal(items);\\n  };\\n\\n  /**\\n   * Layout prepended elements\\n   * @param {Array or NodeList or Element} elems\\n   */\\n  proto.prepended = function (elems) {\\n    var items = this._itemize(elems);\\n    if (!items.length) {\\n      return;\\n    }\\n    // add items to beginning of collection\\n    var previousItems = this.items.slice(0);\\n    this.items = items.concat(previousItems);\\n    // start new layout\\n    this._resetLayout();\\n    this._manageStamps();\\n    // layout new stuff without transition\\n    this.layoutItems(items, true);\\n    this.reveal(items);\\n    // layout previous items\\n    this.layoutItems(previousItems);\\n  };\\n\\n  /**\\n   * reveal a collection of items\\n   * @param {Array of Outlayer.Items} items\\n   */\\n  proto.reveal = function (items) {\\n    this._emitCompleteOnItems('reveal', items);\\n    if (!items || !items.length) {\\n      return;\\n    }\\n    var stagger = this.updateStagger();\\n    items.forEach(function (item, i) {\\n      item.stagger(i * stagger);\\n      item.reveal();\\n    });\\n  };\\n\\n  /**\\n   * hide a collection of items\\n   * @param {Array of Outlayer.Items} items\\n   */\\n  proto.hide = function (items) {\\n    this._emitCompleteOnItems('hide', items);\\n    if (!items || !items.length) {\\n      return;\\n    }\\n    var stagger = this.updateStagger();\\n    items.forEach(function (item, i) {\\n      item.stagger(i * stagger);\\n      item.hide();\\n    });\\n  };\\n\\n  /**\\n   * reveal item elements\\n   * @param {Array}, {Element}, {NodeList} items\\n   */\\n  proto.revealItemElements = function (elems) {\\n    var items = this.getItems(elems);\\n    this.reveal(items);\\n  };\\n\\n  /**\\n   * hide item elements\\n   * @param {Array}, {Element}, {NodeList} items\\n   */\\n  proto.hideItemElements = function (elems) {\\n    var items = this.getItems(elems);\\n    this.hide(items);\\n  };\\n\\n  /**\\n   * get Outlayer.Item, given an Element\\n   * @param {Element} elem\\n   * @param {Function} callback\\n   * @returns {Outlayer.Item} item\\n   */\\n  proto.getItem = function (elem) {\\n    // loop through items to get the one that matches\\n    for (var i = 0; i < this.items.length; i++) {\\n      var item = this.items[i];\\n      if (item.element == elem) {\\n        // return item\\n        return item;\\n      }\\n    }\\n  };\\n\\n  /**\\n   * get collection of Outlayer.Items, given Elements\\n   * @param {Array} elems\\n   * @returns {Array} items - Outlayer.Items\\n   */\\n  proto.getItems = function (elems) {\\n    elems = utils.makeArray(elems);\\n    var items = [];\\n    elems.forEach(function (elem) {\\n      var item = this.getItem(elem);\\n      if (item) {\\n        items.push(item);\\n      }\\n    }, this);\\n\\n    return items;\\n  };\\n\\n  /**\\n   * remove element(s) from instance and DOM\\n   * @param {Array or NodeList or Element} elems\\n   */\\n  proto.remove = function (elems) {\\n    var removeItems = this.getItems(elems);\\n\\n    this._emitCompleteOnItems('remove', removeItems);\\n\\n    // bail if no items to remove\\n    if (!removeItems || !removeItems.length) {\\n      return;\\n    }\\n\\n    removeItems.forEach(function (item) {\\n      item.remove();\\n      // remove item from collection\\n      utils.removeFrom(this.items, item);\\n    }, this);\\n  };\\n\\n  // ----- destroy ----- //\\n\\n  // remove and disable Outlayer instance\\n  proto.destroy = function () {\\n    // clean up dynamic styles\\n    var style = this.element.style;\\n    style.height = '';\\n    style.position = '';\\n    style.width = '';\\n    // destroy items\\n    this.items.forEach(function (item) {\\n      item.destroy();\\n    });\\n\\n    this.unbindResize();\\n\\n    var id = this.element.outlayerGUID;\\n    delete instances[id]; // remove reference to instance by id\\n    delete this.element.outlayerGUID;\\n    // remove data for jQuery\\n    if (jQuery) {\\n      jQuery.removeData(this.element, this.constructor.namespace);\\n    }\\n  };\\n\\n  // -------------------------- data -------------------------- //\\n\\n  /**\\n   * get Outlayer instance from element\\n   * @param {Element} elem\\n   * @returns {Outlayer}\\n   */\\n  Outlayer.data = function (elem) {\\n    elem = utils.getQueryElement(elem);\\n    var id = elem && elem.outlayerGUID;\\n    return id && instances[id];\\n  };\\n\\n  // -------------------------- create Outlayer class -------------------------- //\\n\\n  /**\\n   * create a layout class\\n   * @param {String} namespace\\n   */\\n  Outlayer.create = function (namespace, options) {\\n    // sub-class Outlayer\\n    var Layout = subclass(Outlayer);\\n    // apply new options and compatOptions\\n    Layout.defaults = utils.extend({}, Outlayer.defaults);\\n    utils.extend(Layout.defaults, options);\\n    Layout.compatOptions = utils.extend({}, Outlayer.compatOptions);\\n\\n    Layout.namespace = namespace;\\n\\n    Layout.data = Outlayer.data;\\n\\n    // sub-class Item\\n    Layout.Item = subclass(Item);\\n\\n    // -------------------------- declarative -------------------------- //\\n\\n    utils.htmlInit(Layout, namespace);\\n\\n    // -------------------------- jQuery bridge -------------------------- //\\n\\n    // make into jQuery plugin\\n    if (jQuery && jQuery.bridget) {\\n      jQuery.bridget(namespace, Layout);\\n    }\\n\\n    return Layout;\\n  };\\n\\n  function subclass(Parent) {\\n    function SubClass() {\\n      Parent.apply(this, arguments);\\n    }\\n\\n    SubClass.prototype = Object.create(Parent.prototype);\\n    SubClass.prototype.constructor = SubClass;\\n\\n    return SubClass;\\n  }\\n\\n  // ----- helpers ----- //\\n\\n  // how many milliseconds are in each unit\\n  var msUnits = {\\n    ms: 1,\\n    s: 1000\\n  };\\n\\n  // munge time-like parameter into millisecond number\\n  // '0.4s' -> 40\\n  function getMilliseconds(time) {\\n    if (typeof time == 'number') {\\n      return time;\\n    }\\n    var matches = time.match(/(^\\\\d*\\\\.?\\\\d*)(\\\\w*)/);\\n    var num = matches && matches[1];\\n    var unit = matches && matches[2];\\n    if (!num.length) {\\n      return 0;\\n    }\\n    num = parseFloat(num);\\n    var mult = msUnits[unit] || 1;\\n    return num * mult;\\n  }\\n\\n  // ----- fin ----- //\\n\\n  // back in global\\n  Outlayer.Item = Item;\\n\\n  return Outlayer;\\n});\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./~/outlayer/outlayer.js\\n ** module id = 6\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./~/outlayer/outlayer.js?\");\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol ? \\\"symbol\\\" : typeof obj; };\\n\\n/**\\n * EvEmitter v1.0.2\\n * Lil' event emitter\\n * MIT License\\n */\\n\\n/* jshint unused: true, undef: true, strict: true */\\n\\n(function (global, factory) {\\n  // universal module definition\\n  /* jshint strict: false */ /* globals define, module */\\n  if (true) {\\n    // AMD - RequireJS\\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\\n  } else if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) == 'object' && module.exports) {\\n    // CommonJS - Browserify, Webpack\\n    module.exports = factory();\\n  } else {\\n    // Browser globals\\n    global.EvEmitter = factory();\\n  }\\n})(undefined, function () {\\n\\n  \\\"use strict\\\";\\n\\n  function EvEmitter() {}\\n\\n  var proto = EvEmitter.prototype;\\n\\n  proto.on = function (eventName, listener) {\\n    if (!eventName || !listener) {\\n      return;\\n    }\\n    // set events hash\\n    var events = this._events = this._events || {};\\n    // set listeners array\\n    var listeners = events[eventName] = events[eventName] || [];\\n    // only add once\\n    if (listeners.indexOf(listener) == -1) {\\n      listeners.push(listener);\\n    }\\n\\n    return this;\\n  };\\n\\n  proto.once = function (eventName, listener) {\\n    if (!eventName || !listener) {\\n      return;\\n    }\\n    // add event\\n    this.on(eventName, listener);\\n    // set once flag\\n    // set onceEvents hash\\n    var onceEvents = this._onceEvents = this._onceEvents || {};\\n    // set onceListeners object\\n    var onceListeners = onceEvents[eventName] = onceEvents[eventName] || {};\\n    // set flag\\n    onceListeners[listener] = true;\\n\\n    return this;\\n  };\\n\\n  proto.off = function (eventName, listener) {\\n    var listeners = this._events && this._events[eventName];\\n    if (!listeners || !listeners.length) {\\n      return;\\n    }\\n    var index = listeners.indexOf(listener);\\n    if (index != -1) {\\n      listeners.splice(index, 1);\\n    }\\n\\n    return this;\\n  };\\n\\n  proto.emitEvent = function (eventName, args) {\\n    var listeners = this._events && this._events[eventName];\\n    if (!listeners || !listeners.length) {\\n      return;\\n    }\\n    var i = 0;\\n    var listener = listeners[i];\\n    args = args || [];\\n    // once stuff\\n    var onceListeners = this._onceEvents && this._onceEvents[eventName];\\n\\n    while (listener) {\\n      var isOnce = onceListeners && onceListeners[listener];\\n      if (isOnce) {\\n        // remove listener\\n        // remove before trigger to prevent recursion\\n        this.off(eventName, listener);\\n        // unset once flag\\n        delete onceListeners[listener];\\n      }\\n      // trigger listener\\n      listener.apply(this, args);\\n      // get next listener\\n      i += isOnce ? 0 : 1;\\n      listener = listeners[i];\\n    }\\n\\n    return this;\\n  };\\n\\n  return EvEmitter;\\n});\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./~/ev-emitter/ev-emitter.js\\n ** module id = 7\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./~/ev-emitter/ev-emitter.js?\");\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"var __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol ? \\\"symbol\\\" : typeof obj; };\\n\\n/*!\\n * getSize v2.0.2\\n * measure size of elements\\n * MIT license\\n */\\n\\n/*jshint browser: true, strict: true, undef: true, unused: true */\\n/*global define: false, module: false, console: false */\\n\\n(function (window, factory) {\\n  'use strict';\\n\\n  if (true) {\\n    // AMD\\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\\n      return factory();\\n    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\\n  } else if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) == 'object' && module.exports) {\\n    // CommonJS\\n    module.exports = factory();\\n  } else {\\n    // browser global\\n    window.getSize = factory();\\n  }\\n})(window, function factory() {\\n  'use strict';\\n\\n  // -------------------------- helpers -------------------------- //\\n\\n  // get a number from a string, not a percentage\\n\\n  function getStyleSize(value) {\\n    var num = parseFloat(value);\\n    // not a percent like '100%', and a number\\n    var isValid = value.indexOf('%') == -1 && !isNaN(num);\\n    return isValid && num;\\n  }\\n\\n  function noop() {}\\n\\n  var logError = typeof console == 'undefined' ? noop : function (message) {\\n    console.error(message);\\n  };\\n\\n  // -------------------------- measurements -------------------------- //\\n\\n  var measurements = ['paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom', 'marginLeft', 'marginRight', 'marginTop', 'marginBottom', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth', 'borderBottomWidth'];\\n\\n  var measurementsLength = measurements.length;\\n\\n  function getZeroSize() {\\n    var size = {\\n      width: 0,\\n      height: 0,\\n      innerWidth: 0,\\n      innerHeight: 0,\\n      outerWidth: 0,\\n      outerHeight: 0\\n    };\\n    for (var i = 0; i < measurementsLength; i++) {\\n      var measurement = measurements[i];\\n      size[measurement] = 0;\\n    }\\n    return size;\\n  }\\n\\n  // -------------------------- getStyle -------------------------- //\\n\\n  /**\\n   * getStyle, get style of element, check for Firefox bug\\n   * https://bugzilla.mozilla.org/show_bug.cgi?id=548397\\n   */\\n  function getStyle(elem) {\\n    var style = getComputedStyle(elem);\\n    if (!style) {\\n      logError('Style returned ' + style + '. Are you running this code in a hidden iframe on Firefox? ' + 'See http://bit.ly/getsizebug1');\\n    }\\n    return style;\\n  }\\n\\n  // -------------------------- setup -------------------------- //\\n\\n  var isSetup = false;\\n\\n  var isBoxSizeOuter;\\n\\n  /**\\n   * setup\\n   * check isBoxSizerOuter\\n   * do on first getSize() rather than on page load for Firefox bug\\n   */\\n  function setup() {\\n    // setup once\\n    if (isSetup) {\\n      return;\\n    }\\n    isSetup = true;\\n\\n    // -------------------------- box sizing -------------------------- //\\n\\n    /**\\n     * WebKit measures the outer-width on style.width on border-box elems\\n     * IE & Firefox<29 measures the inner-width\\n     */\\n    var div = document.createElement('div');\\n    div.style.width = '200px';\\n    div.style.padding = '1px 2px 3px 4px';\\n    div.style.borderStyle = 'solid';\\n    div.style.borderWidth = '1px 2px 3px 4px';\\n    div.style.boxSizing = 'border-box';\\n\\n    var body = document.body || document.documentElement;\\n    body.appendChild(div);\\n    var style = getStyle(div);\\n\\n    getSize.isBoxSizeOuter = isBoxSizeOuter = getStyleSize(style.width) == 200;\\n    body.removeChild(div);\\n  }\\n\\n  // -------------------------- getSize -------------------------- //\\n\\n  function getSize(elem) {\\n    setup();\\n\\n    // use querySeletor if elem is string\\n    if (typeof elem == 'string') {\\n      elem = document.querySelector(elem);\\n    }\\n\\n    // do not proceed on non-objects\\n    if (!elem || (typeof elem === 'undefined' ? 'undefined' : _typeof(elem)) != 'object' || !elem.nodeType) {\\n      return;\\n    }\\n\\n    var style = getStyle(elem);\\n\\n    // if hidden, everything is 0\\n    if (style.display == 'none') {\\n      return getZeroSize();\\n    }\\n\\n    var size = {};\\n    size.width = elem.offsetWidth;\\n    size.height = elem.offsetHeight;\\n\\n    var isBorderBox = size.isBorderBox = style.boxSizing == 'border-box';\\n\\n    // get all measurements\\n    for (var i = 0; i < measurementsLength; i++) {\\n      var measurement = measurements[i];\\n      var value = style[measurement];\\n      var num = parseFloat(value);\\n      // any 'auto', 'medium' value will be 0\\n      size[measurement] = !isNaN(num) ? num : 0;\\n    }\\n\\n    var paddingWidth = size.paddingLeft + size.paddingRight;\\n    var paddingHeight = size.paddingTop + size.paddingBottom;\\n    var marginWidth = size.marginLeft + size.marginRight;\\n    var marginHeight = size.marginTop + size.marginBottom;\\n    var borderWidth = size.borderLeftWidth + size.borderRightWidth;\\n    var borderHeight = size.borderTopWidth + size.borderBottomWidth;\\n\\n    var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;\\n\\n    // overwrite width and height if we can get it from style\\n    var styleWidth = getStyleSize(style.width);\\n    if (styleWidth !== false) {\\n      size.width = styleWidth + (\\n      // add padding and border unless it's already including it\\n      isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth);\\n    }\\n\\n    var styleHeight = getStyleSize(style.height);\\n    if (styleHeight !== false) {\\n      size.height = styleHeight + (\\n      // add padding and border unless it's already including it\\n      isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight);\\n    }\\n\\n    size.innerWidth = size.width - (paddingWidth + borderWidth);\\n    size.innerHeight = size.height - (paddingHeight + borderHeight);\\n\\n    size.outerWidth = size.width + marginWidth;\\n    size.outerHeight = size.height + marginHeight;\\n\\n    return size;\\n  }\\n\\n  return getSize;\\n});\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./~/get-size/get-size.js\\n ** module id = 8\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./~/get-size/get-size.js?\");\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol ? \\\"symbol\\\" : typeof obj; };\\n\\n/**\\n * Fizzy UI utils v2.0.2\\n * MIT license\\n */\\n\\n/*jshint browser: true, undef: true, unused: true, strict: true */\\n\\n(function (window, factory) {\\n  // universal module definition\\n  /*jshint strict: false */ /*globals define, module, require */\\n\\n  if (true) {\\n    // AMD\\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(10)], __WEBPACK_AMD_DEFINE_RESULT__ = function (matchesSelector) {\\n      return factory(window, matchesSelector);\\n    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\\n  } else if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) == 'object' && module.exports) {\\n    // CommonJS\\n    module.exports = factory(window, require('desandro-matches-selector'));\\n  } else {\\n    // browser global\\n    window.fizzyUIUtils = factory(window, window.matchesSelector);\\n  }\\n})(window, function factory(window, matchesSelector) {\\n\\n  'use strict';\\n\\n  var utils = {};\\n\\n  // ----- extend ----- //\\n\\n  // extends objects\\n  utils.extend = function (a, b) {\\n    for (var prop in b) {\\n      a[prop] = b[prop];\\n    }\\n    return a;\\n  };\\n\\n  // ----- modulo ----- //\\n\\n  utils.modulo = function (num, div) {\\n    return (num % div + div) % div;\\n  };\\n\\n  // ----- makeArray ----- //\\n\\n  // turn element or nodeList into an array\\n  utils.makeArray = function (obj) {\\n    var ary = [];\\n    if (Array.isArray(obj)) {\\n      // use object if already an array\\n      ary = obj;\\n    } else if (obj && typeof obj.length == 'number') {\\n      // convert nodeList to array\\n      for (var i = 0; i < obj.length; i++) {\\n        ary.push(obj[i]);\\n      }\\n    } else {\\n      // array of single index\\n      ary.push(obj);\\n    }\\n    return ary;\\n  };\\n\\n  // ----- removeFrom ----- //\\n\\n  utils.removeFrom = function (ary, obj) {\\n    var index = ary.indexOf(obj);\\n    if (index != -1) {\\n      ary.splice(index, 1);\\n    }\\n  };\\n\\n  // ----- getParent ----- //\\n\\n  utils.getParent = function (elem, selector) {\\n    while (elem != document.body) {\\n      elem = elem.parentNode;\\n      if (matchesSelector(elem, selector)) {\\n        return elem;\\n      }\\n    }\\n  };\\n\\n  // ----- getQueryElement ----- //\\n\\n  // use element as selector string\\n  utils.getQueryElement = function (elem) {\\n    if (typeof elem == 'string') {\\n      return document.querySelector(elem);\\n    }\\n    return elem;\\n  };\\n\\n  // ----- handleEvent ----- //\\n\\n  // enable .ontype to trigger from .addEventListener( elem, 'type' )\\n  utils.handleEvent = function (event) {\\n    var method = 'on' + event.type;\\n    if (this[method]) {\\n      this[method](event);\\n    }\\n  };\\n\\n  // ----- filterFindElements ----- //\\n\\n  utils.filterFindElements = function (elems, selector) {\\n    // make array of elems\\n    elems = utils.makeArray(elems);\\n    var ffElems = [];\\n\\n    elems.forEach(function (elem) {\\n      // check that elem is an actual element\\n      if (!(elem instanceof HTMLElement)) {\\n        return;\\n      }\\n      // add elem if no selector\\n      if (!selector) {\\n        ffElems.push(elem);\\n        return;\\n      }\\n      // filter & find items if we have a selector\\n      // filter\\n      if (matchesSelector(elem, selector)) {\\n        ffElems.push(elem);\\n      }\\n      // find children\\n      var childElems = elem.querySelectorAll(selector);\\n      // concat childElems to filterFound array\\n      for (var i = 0; i < childElems.length; i++) {\\n        ffElems.push(childElems[i]);\\n      }\\n    });\\n\\n    return ffElems;\\n  };\\n\\n  // ----- debounceMethod ----- //\\n\\n  utils.debounceMethod = function (_class, methodName, threshold) {\\n    // original method\\n    var method = _class.prototype[methodName];\\n    var timeoutName = methodName + 'Timeout';\\n\\n    _class.prototype[methodName] = function () {\\n      var timeout = this[timeoutName];\\n      if (timeout) {\\n        clearTimeout(timeout);\\n      }\\n      var args = arguments;\\n\\n      var _this = this;\\n      this[timeoutName] = setTimeout(function () {\\n        method.apply(_this, args);\\n        delete _this[timeoutName];\\n      }, threshold || 100);\\n    };\\n  };\\n\\n  // ----- docReady ----- //\\n\\n  utils.docReady = function (callback) {\\n    var readyState = document.readyState;\\n    if (readyState == 'complete' || readyState == 'interactive') {\\n      callback();\\n    } else {\\n      document.addEventListener('DOMContentLoaded', callback);\\n    }\\n  };\\n\\n  // ----- htmlInit ----- //\\n\\n  // http://jamesroberts.name/blog/2010/02/22/string-functions-for-javascript-trim-to-camel-case-to-dashed-and-to-underscore/\\n  utils.toDashed = function (str) {\\n    return str.replace(/(.)([A-Z])/g, function (match, $1, $2) {\\n      return $1 + '-' + $2;\\n    }).toLowerCase();\\n  };\\n\\n  var console = window.console;\\n  /**\\n   * allow user to initialize classes via [data-namespace] or .js-namespace class\\n   * htmlInit( Widget, 'widgetName' )\\n   * options are parsed from data-namespace-options\\n   */\\n  utils.htmlInit = function (WidgetClass, namespace) {\\n    utils.docReady(function () {\\n      var dashedNamespace = utils.toDashed(namespace);\\n      var dataAttr = 'data-' + dashedNamespace;\\n      var dataAttrElems = document.querySelectorAll('[' + dataAttr + ']');\\n      var jsDashElems = document.querySelectorAll('.js-' + dashedNamespace);\\n      var elems = utils.makeArray(dataAttrElems).concat(utils.makeArray(jsDashElems));\\n      var dataOptionsAttr = dataAttr + '-options';\\n      var jQuery = window.jQuery;\\n\\n      elems.forEach(function (elem) {\\n        var attr = elem.getAttribute(dataAttr) || elem.getAttribute(dataOptionsAttr);\\n        var options;\\n        try {\\n          options = attr && JSON.parse(attr);\\n        } catch (error) {\\n          // log error, do not initialize\\n          if (console) {\\n            console.error('Error parsing ' + dataAttr + ' on ' + elem.className + ': ' + error);\\n          }\\n          return;\\n        }\\n        // initialize\\n        var instance = new WidgetClass(elem, options);\\n        // make available via $().data('layoutname')\\n        if (jQuery) {\\n          jQuery.data(elem, namespace, instance);\\n        }\\n      });\\n    });\\n  };\\n\\n  // -----  ----- //\\n\\n  return utils;\\n});\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./~/fizzy-ui-utils/utils.js\\n ** module id = 9\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./~/fizzy-ui-utils/utils.js?\");\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol ? \\\"symbol\\\" : typeof obj; };\\n\\n/**\\n * matchesSelector v2.0.1\\n * matchesSelector( element, '.selector' )\\n * MIT license\\n */\\n\\n/*jshint browser: true, strict: true, undef: true, unused: true */\\n\\n(function (window, factory) {\\n  /*global define: false, module: false */\\n  'use strict';\\n  // universal module definition\\n\\n  if (true) {\\n    // AMD\\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\\n  } else if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) == 'object' && module.exports) {\\n    // CommonJS\\n    module.exports = factory();\\n  } else {\\n    // browser global\\n    window.matchesSelector = factory();\\n  }\\n})(window, function factory() {\\n  'use strict';\\n\\n  var matchesMethod = function () {\\n    var ElemProto = Element.prototype;\\n    // check for the standard method name first\\n    if (ElemProto.matches) {\\n      return 'matches';\\n    }\\n    // check un-prefixed\\n    if (ElemProto.matchesSelector) {\\n      return 'matchesSelector';\\n    }\\n    // check vendor prefixes\\n    var prefixes = ['webkit', 'moz', 'ms', 'o'];\\n\\n    for (var i = 0; i < prefixes.length; i++) {\\n      var prefix = prefixes[i];\\n      var method = prefix + 'MatchesSelector';\\n      if (ElemProto[method]) {\\n        return method;\\n      }\\n    }\\n  }();\\n\\n  return function matchesSelector(elem, selector) {\\n    return elem[matchesMethod](selector);\\n  };\\n});\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./~/desandro-matches-selector/matches-selector.js\\n ** module id = 10\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./~/desandro-matches-selector/matches-selector.js?\");\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\teval(\"var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol ? \\\"symbol\\\" : typeof obj; };\\n\\n/**\\n * Outlayer Item\\n */\\n\\n(function (window, factory) {\\n  // universal module definition\\n  /* jshint strict: false */ /* globals define, module, require */\\n  if (true) {\\n    // AMD - RequireJS\\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(7), __webpack_require__(8)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\\n  } else if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) == 'object' && module.exports) {\\n    // CommonJS - Browserify, Webpack\\n    module.exports = factory(require('ev-emitter'), require('get-size'));\\n  } else {\\n    // browser global\\n    window.Outlayer = {};\\n    window.Outlayer.Item = factory(window.EvEmitter, window.getSize);\\n  }\\n})(window, function factory(EvEmitter, getSize) {\\n  'use strict';\\n\\n  // ----- helpers ----- //\\n\\n  function isEmptyObj(obj) {\\n    for (var prop in obj) {\\n      return false;\\n    }\\n    prop = null;\\n    return true;\\n  }\\n\\n  // -------------------------- CSS3 support -------------------------- //\\n\\n  var docElemStyle = document.documentElement.style;\\n\\n  var transitionProperty = typeof docElemStyle.transition == 'string' ? 'transition' : 'WebkitTransition';\\n  var transformProperty = typeof docElemStyle.transform == 'string' ? 'transform' : 'WebkitTransform';\\n\\n  var transitionEndEvent = {\\n    WebkitTransition: 'webkitTransitionEnd',\\n    transition: 'transitionend'\\n  }[transitionProperty];\\n\\n  // cache all vendor properties that could have vendor prefix\\n  var vendorProperties = {\\n    transform: transformProperty,\\n    transition: transitionProperty,\\n    transitionDuration: transitionProperty + 'Duration',\\n    transitionProperty: transitionProperty + 'Property',\\n    transitionDelay: transitionProperty + 'Delay'\\n  };\\n\\n  // -------------------------- Item -------------------------- //\\n\\n  function Item(element, layout) {\\n    if (!element) {\\n      return;\\n    }\\n\\n    this.element = element;\\n    // parent layout class, i.e. Masonry, Isotope, or Packery\\n    this.layout = layout;\\n    this.position = {\\n      x: 0,\\n      y: 0\\n    };\\n\\n    this._create();\\n  }\\n\\n  // inherit EvEmitter\\n  var proto = Item.prototype = Object.create(EvEmitter.prototype);\\n  proto.constructor = Item;\\n\\n  proto._create = function () {\\n    // transition objects\\n    this._transn = {\\n      ingProperties: {},\\n      clean: {},\\n      onEnd: {}\\n    };\\n\\n    this.css({\\n      position: 'absolute'\\n    });\\n  };\\n\\n  // trigger specified handler for event type\\n  proto.handleEvent = function (event) {\\n    var method = 'on' + event.type;\\n    if (this[method]) {\\n      this[method](event);\\n    }\\n  };\\n\\n  proto.getSize = function () {\\n    this.size = getSize(this.element);\\n  };\\n\\n  /**\\n   * apply CSS styles to element\\n   * @param {Object} style\\n   */\\n  proto.css = function (style) {\\n    var elemStyle = this.element.style;\\n\\n    for (var prop in style) {\\n      // use vendor property if available\\n      var supportedProp = vendorProperties[prop] || prop;\\n      elemStyle[supportedProp] = style[prop];\\n    }\\n  };\\n\\n  // measure position, and sets it\\n  proto.getPosition = function () {\\n    var style = getComputedStyle(this.element);\\n    var isOriginLeft = this.layout._getOption('originLeft');\\n    var isOriginTop = this.layout._getOption('originTop');\\n    var xValue = style[isOriginLeft ? 'left' : 'right'];\\n    var yValue = style[isOriginTop ? 'top' : 'bottom'];\\n    // convert percent to pixels\\n    var layoutSize = this.layout.size;\\n    var x = xValue.indexOf('%') != -1 ? parseFloat(xValue) / 100 * layoutSize.width : parseInt(xValue, 10);\\n    var y = yValue.indexOf('%') != -1 ? parseFloat(yValue) / 100 * layoutSize.height : parseInt(yValue, 10);\\n\\n    // clean up 'auto' or other non-integer values\\n    x = isNaN(x) ? 0 : x;\\n    y = isNaN(y) ? 0 : y;\\n    // remove padding from measurement\\n    x -= isOriginLeft ? layoutSize.paddingLeft : layoutSize.paddingRight;\\n    y -= isOriginTop ? layoutSize.paddingTop : layoutSize.paddingBottom;\\n\\n    this.position.x = x;\\n    this.position.y = y;\\n  };\\n\\n  // set settled position, apply padding\\n  proto.layoutPosition = function () {\\n    var layoutSize = this.layout.size;\\n    var style = {};\\n    var isOriginLeft = this.layout._getOption('originLeft');\\n    var isOriginTop = this.layout._getOption('originTop');\\n\\n    // x\\n    var xPadding = isOriginLeft ? 'paddingLeft' : 'paddingRight';\\n    var xProperty = isOriginLeft ? 'left' : 'right';\\n    var xResetProperty = isOriginLeft ? 'right' : 'left';\\n\\n    var x = this.position.x + layoutSize[xPadding];\\n    // set in percentage or pixels\\n    style[xProperty] = this.getXValue(x);\\n    // reset other property\\n    style[xResetProperty] = '';\\n\\n    // y\\n    var yPadding = isOriginTop ? 'paddingTop' : 'paddingBottom';\\n    var yProperty = isOriginTop ? 'top' : 'bottom';\\n    var yResetProperty = isOriginTop ? 'bottom' : 'top';\\n\\n    var y = this.position.y + layoutSize[yPadding];\\n    // set in percentage or pixels\\n    style[yProperty] = this.getYValue(y);\\n    // reset other property\\n    style[yResetProperty] = '';\\n\\n    this.css(style);\\n    this.emitEvent('layout', [this]);\\n  };\\n\\n  proto.getXValue = function (x) {\\n    var isHorizontal = this.layout._getOption('horizontal');\\n    return this.layout.options.percentPosition && !isHorizontal ? x / this.layout.size.width * 100 + '%' : x + 'px';\\n  };\\n\\n  proto.getYValue = function (y) {\\n    var isHorizontal = this.layout._getOption('horizontal');\\n    return this.layout.options.percentPosition && isHorizontal ? y / this.layout.size.height * 100 + '%' : y + 'px';\\n  };\\n\\n  proto._transitionTo = function (x, y) {\\n    this.getPosition();\\n    // get current x & y from top/left\\n    var curX = this.position.x;\\n    var curY = this.position.y;\\n\\n    var compareX = parseInt(x, 10);\\n    var compareY = parseInt(y, 10);\\n    var didNotMove = compareX === this.position.x && compareY === this.position.y;\\n\\n    // save end position\\n    this.setPosition(x, y);\\n\\n    // if did not move and not transitioning, just go to layout\\n    if (didNotMove && !this.isTransitioning) {\\n      this.layoutPosition();\\n      return;\\n    }\\n\\n    var transX = x - curX;\\n    var transY = y - curY;\\n    var transitionStyle = {};\\n    transitionStyle.transform = this.getTranslate(transX, transY);\\n\\n    this.transition({\\n      to: transitionStyle,\\n      onTransitionEnd: {\\n        transform: this.layoutPosition\\n      },\\n      isCleaning: true\\n    });\\n  };\\n\\n  proto.getTranslate = function (x, y) {\\n    // flip cooridinates if origin on right or bottom\\n    var isOriginLeft = this.layout._getOption('originLeft');\\n    var isOriginTop = this.layout._getOption('originTop');\\n    x = isOriginLeft ? x : -x;\\n    y = isOriginTop ? y : -y;\\n    return 'translate3d(' + x + 'px, ' + y + 'px, 0)';\\n  };\\n\\n  // non transition + transform support\\n  proto.goTo = function (x, y) {\\n    this.setPosition(x, y);\\n    this.layoutPosition();\\n  };\\n\\n  proto.moveTo = proto._transitionTo;\\n\\n  proto.setPosition = function (x, y) {\\n    this.position.x = parseInt(x, 10);\\n    this.position.y = parseInt(y, 10);\\n  };\\n\\n  // ----- transition ----- //\\n\\n  /**\\n   * @param {Object} style - CSS\\n   * @param {Function} onTransitionEnd\\n   */\\n\\n  // non transition, just trigger callback\\n  proto._nonTransition = function (args) {\\n    this.css(args.to);\\n    if (args.isCleaning) {\\n      this._removeStyles(args.to);\\n    }\\n    for (var prop in args.onTransitionEnd) {\\n      args.onTransitionEnd[prop].call(this);\\n    }\\n  };\\n\\n  /**\\n   * proper transition\\n   * @param {Object} args - arguments\\n   *   @param {Object} to - style to transition to\\n   *   @param {Object} from - style to start transition from\\n   *   @param {Boolean} isCleaning - removes transition styles after transition\\n   *   @param {Function} onTransitionEnd - callback\\n   */\\n  proto.transition = function (args) {\\n    // redirect to nonTransition if no transition duration\\n    if (!parseFloat(this.layout.options.transitionDuration)) {\\n      this._nonTransition(args);\\n      return;\\n    }\\n\\n    var _transition = this._transn;\\n    // keep track of onTransitionEnd callback by css property\\n    for (var prop in args.onTransitionEnd) {\\n      _transition.onEnd[prop] = args.onTransitionEnd[prop];\\n    }\\n    // keep track of properties that are transitioning\\n    for (prop in args.to) {\\n      _transition.ingProperties[prop] = true;\\n      // keep track of properties to clean up when transition is done\\n      if (args.isCleaning) {\\n        _transition.clean[prop] = true;\\n      }\\n    }\\n\\n    // set from styles\\n    if (args.from) {\\n      this.css(args.from);\\n      // force redraw. http://blog.alexmaccaw.com/css-transitions\\n      var h = this.element.offsetHeight;\\n      // hack for JSHint to hush about unused var\\n      h = null;\\n    }\\n    // enable transition\\n    this.enableTransition(args.to);\\n    // set styles that are transitioning\\n    this.css(args.to);\\n\\n    this.isTransitioning = true;\\n  };\\n\\n  // dash before all cap letters, including first for\\n  // WebkitTransform => -webkit-transform\\n  function toDashedAll(str) {\\n    return str.replace(/([A-Z])/g, function ($1) {\\n      return '-' + $1.toLowerCase();\\n    });\\n  }\\n\\n  var transitionProps = 'opacity,' + toDashedAll(transformProperty);\\n\\n  proto.enableTransition = function () /* style */{\\n    // HACK changing transitionProperty during a transition\\n    // will cause transition to jump\\n    if (this.isTransitioning) {\\n      return;\\n    }\\n\\n    // make `transition: foo, bar, baz` from style object\\n    // HACK un-comment this when enableTransition can work\\n    // while a transition is happening\\n    // var transitionValues = [];\\n    // for ( var prop in style ) {\\n    //   // dash-ify camelCased properties like WebkitTransition\\n    //   prop = vendorProperties[ prop ] || prop;\\n    //   transitionValues.push( toDashedAll( prop ) );\\n    // }\\n    // munge number to millisecond, to match stagger\\n    var duration = this.layout.options.transitionDuration;\\n    duration = typeof duration == 'number' ? duration + 'ms' : duration;\\n    // enable transition styles\\n    this.css({\\n      transitionProperty: transitionProps,\\n      transitionDuration: duration,\\n      transitionDelay: this.staggerDelay || 0\\n    });\\n    // listen for transition end event\\n    this.element.addEventListener(transitionEndEvent, this, false);\\n  };\\n\\n  // ----- events ----- //\\n\\n  proto.onwebkitTransitionEnd = function (event) {\\n    this.ontransitionend(event);\\n  };\\n\\n  proto.onotransitionend = function (event) {\\n    this.ontransitionend(event);\\n  };\\n\\n  // properties that I munge to make my life easier\\n  var dashedVendorProperties = {\\n    '-webkit-transform': 'transform'\\n  };\\n\\n  proto.ontransitionend = function (event) {\\n    // disregard bubbled events from children\\n    if (event.target !== this.element) {\\n      return;\\n    }\\n    var _transition = this._transn;\\n    // get property name of transitioned property, convert to prefix-free\\n    var propertyName = dashedVendorProperties[event.propertyName] || event.propertyName;\\n\\n    // remove property that has completed transitioning\\n    delete _transition.ingProperties[propertyName];\\n    // check if any properties are still transitioning\\n    if (isEmptyObj(_transition.ingProperties)) {\\n      // all properties have completed transitioning\\n      this.disableTransition();\\n    }\\n    // clean style\\n    if (propertyName in _transition.clean) {\\n      // clean up style\\n      this.element.style[event.propertyName] = '';\\n      delete _transition.clean[propertyName];\\n    }\\n    // trigger onTransitionEnd callback\\n    if (propertyName in _transition.onEnd) {\\n      var onTransitionEnd = _transition.onEnd[propertyName];\\n      onTransitionEnd.call(this);\\n      delete _transition.onEnd[propertyName];\\n    }\\n\\n    this.emitEvent('transitionEnd', [this]);\\n  };\\n\\n  proto.disableTransition = function () {\\n    this.removeTransitionStyles();\\n    this.element.removeEventListener(transitionEndEvent, this, false);\\n    this.isTransitioning = false;\\n  };\\n\\n  /**\\n   * removes style property from element\\n   * @param {Object} style\\n  **/\\n  proto._removeStyles = function (style) {\\n    // clean up transition styles\\n    var cleanStyle = {};\\n    for (var prop in style) {\\n      cleanStyle[prop] = '';\\n    }\\n    this.css(cleanStyle);\\n  };\\n\\n  var cleanTransitionStyle = {\\n    transitionProperty: '',\\n    transitionDuration: '',\\n    transitionDelay: ''\\n  };\\n\\n  proto.removeTransitionStyles = function () {\\n    // remove transition\\n    this.css(cleanTransitionStyle);\\n  };\\n\\n  // ----- stagger ----- //\\n\\n  proto.stagger = function (delay) {\\n    delay = isNaN(delay) ? 0 : delay;\\n    this.staggerDelay = delay + 'ms';\\n  };\\n\\n  // ----- show/hide/remove ----- //\\n\\n  // remove element from DOM\\n  proto.removeElem = function () {\\n    this.element.parentNode.removeChild(this.element);\\n    // remove display: none\\n    this.css({ display: '' });\\n    this.emitEvent('remove', [this]);\\n  };\\n\\n  proto.remove = function () {\\n    // just remove element if no transition support or no transition\\n    if (!transitionProperty || !parseFloat(this.layout.options.transitionDuration)) {\\n      this.removeElem();\\n      return;\\n    }\\n\\n    // start transition\\n    this.once('transitionEnd', function () {\\n      this.removeElem();\\n    });\\n    this.hide();\\n  };\\n\\n  proto.reveal = function () {\\n    delete this.isHidden;\\n    // remove display: none\\n    this.css({ display: '' });\\n\\n    var options = this.layout.options;\\n\\n    var onTransitionEnd = {};\\n    var transitionEndProperty = this.getHideRevealTransitionEndProperty('visibleStyle');\\n    onTransitionEnd[transitionEndProperty] = this.onRevealTransitionEnd;\\n\\n    this.transition({\\n      from: options.hiddenStyle,\\n      to: options.visibleStyle,\\n      isCleaning: true,\\n      onTransitionEnd: onTransitionEnd\\n    });\\n  };\\n\\n  proto.onRevealTransitionEnd = function () {\\n    // check if still visible\\n    // during transition, item may have been hidden\\n    if (!this.isHidden) {\\n      this.emitEvent('reveal');\\n    }\\n  };\\n\\n  /**\\n   * get style property use for hide/reveal transition end\\n   * @param {String} styleProperty - hiddenStyle/visibleStyle\\n   * @returns {String}\\n   */\\n  proto.getHideRevealTransitionEndProperty = function (styleProperty) {\\n    var optionStyle = this.layout.options[styleProperty];\\n    // use opacity\\n    if (optionStyle.opacity) {\\n      return 'opacity';\\n    }\\n    // get first property\\n    for (var prop in optionStyle) {\\n      return prop;\\n    }\\n  };\\n\\n  proto.hide = function () {\\n    // set flag\\n    this.isHidden = true;\\n    // remove display: none\\n    this.css({ display: '' });\\n\\n    var options = this.layout.options;\\n\\n    var onTransitionEnd = {};\\n    var transitionEndProperty = this.getHideRevealTransitionEndProperty('hiddenStyle');\\n    onTransitionEnd[transitionEndProperty] = this.onHideTransitionEnd;\\n\\n    this.transition({\\n      from: options.visibleStyle,\\n      to: options.hiddenStyle,\\n      // keep hidden stuff hidden\\n      isCleaning: true,\\n      onTransitionEnd: onTransitionEnd\\n    });\\n  };\\n\\n  proto.onHideTransitionEnd = function () {\\n    // check if still hidden\\n    // during transition, item may have been un-hidden\\n    if (this.isHidden) {\\n      this.css({ display: 'none' });\\n      this.emitEvent('hide');\\n    }\\n  };\\n\\n  proto.destroy = function () {\\n    this.css({\\n      position: '',\\n      left: '',\\n      right: '',\\n      top: '',\\n      bottom: '',\\n      transition: '',\\n      transform: ''\\n    });\\n  };\\n\\n  return Item;\\n});\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./~/outlayer/item.js\\n ** module id = 11\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./~/outlayer/item.js?\");\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nfunction resizeTextarea() {\\n  var s = void 0;\\n  var defaults = {\\n    maxHeight: 300,\\n    id: 'formMessage',\\n    wrapperId: 'formMessageWrapper'\\n  };\\n\\n  function handleResize() {\\n    var textArea = document.getElementById(s.id);\\n    var wrapper = document.getElementById(s.wrapperId);\\n\\n    textArea.style.overflow = 'hidden';\\n    textArea.style.height = 'auto';\\n    textArea.style.height = textArea.scrollHeight + 'px';\\n    wrapper.style.height = textArea.style.height;\\n\\n    if (textArea.scrollHeight >= s.maxHeight) {\\n      textArea.style.overflowY = 'auto';\\n      textArea.style.maxHeight = s.maxHeight + 'px';\\n      wrapper.style.maxHeight = s.maxHeight + 'px';\\n    }\\n  }\\n\\n  function handleDelayedResize() {\\n    window.setTimeout(handleResize, 0);\\n  }\\n\\n  function bindUIActions() {\\n    var textArea = document.getElementById(s.id);\\n\\n    textArea.addEventListener('change', handleResize);\\n    textArea.addEventListener('cut', handleDelayedResize);\\n    textArea.addEventListener('paste', handleDelayedResize);\\n    textArea.addEventListener('drop', handleDelayedResize);\\n    textArea.addEventListener('keydown', handleDelayedResize);\\n\\n    handleResize();\\n  }\\n\\n  return {\\n    init: function init(options) {\\n      s = Object.assign({}, defaults, options);\\n      bindUIActions();\\n    }\\n  };\\n}\\n\\nexports.default = resizeTextarea();\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/assets/javascript/factories/resizeTextarea.js\\n ** module id = 12\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/assets/javascript/factories/resizeTextarea.js?\");\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nvar scroller = function scroller() {\\n  var s = void 0;\\n  var defaults = {\\n    attribute: 'data-scroll',\\n    parent: document.body,\\n    speed: 500,\\n    ease: function ease(_time) {\\n      var time = _time;\\n      return time < 0.5 ? 8 * time * time * time * time : 1 - 8 * --time * time * time * time;\\n    }\\n  };\\n\\n  function getAnchorElement(evtTarget) {\\n    var element = evtTarget;\\n\\n    while (element !== s.parent) {\\n      if (element.hasAttribute(s.attribute)) {\\n        return element;\\n      }\\n      element = element.parentNode;\\n    }\\n\\n    return null;\\n  }\\n\\n  function getTargetLocation(_target) {\\n    var target = _target;\\n    var y = target.offsetTop;\\n\\n    while (target.offsetParent && target.offsetParent !== document.body) {\\n      target = target.offsetParent;\\n      y += target.offsetTop;\\n    }\\n\\n    return y;\\n  }\\n\\n  function getDocumentHeight() {\\n    return Math.max(window.document.body.scrollHeight, window.document.documentElement.scrollHeight, window.document.body.offsetHeight, window.document.documentElement.offsetHeight, window.document.body.clientHeight, window.document.documentElement.clientHeight);\\n  }\\n\\n  function handleScroll(anchorElement) {\\n    var targetId = anchorElement.getAttribute(s.attribute) || anchorElement.hash;\\n    targetId = targetId.substr(1);\\n    var target = document.getElementById(targetId);\\n\\n    if (!target) {\\n      return null;\\n    }\\n\\n    var startLocation = window.scrollY;\\n    var targetLocation = getTargetLocation(target);\\n    var distance = targetLocation - startLocation;\\n    var documentHeight = getDocumentHeight();\\n    var timeLapsed = 0;\\n    var interval = void 0;\\n    var percentage = void 0;\\n    var position = void 0;\\n\\n    function stopScroll() {\\n      var currentLocation = window.scrollY;\\n      if (position === targetLocation || currentLocation === targetLocation || window.innerHeight + currentLocation >= documentHeight) {\\n        clearInterval(interval);\\n      }\\n    }\\n\\n    function loopScroll() {\\n      timeLapsed += 16;\\n      percentage = timeLapsed / parseInt(s.speed, 10);\\n      percentage = percentage > 1 ? 1 : percentage;\\n      position = startLocation + distance * s.ease(percentage);\\n      window.scrollTo(0, Math.floor(position));\\n      stopScroll();\\n    }\\n\\n    function startScroll() {\\n      clearInterval(interval);\\n      interval = setInterval(loopScroll, 16);\\n    }\\n\\n    return startScroll();\\n  }\\n\\n  function handleClick(e) {\\n    var anchorElement = getAnchorElement(e.target);\\n\\n    if (!!anchorElement) {\\n      e.preventDefault();\\n      return handleScroll(anchorElement);\\n    }\\n\\n    return null;\\n  }\\n\\n  function bindUIActions() {\\n    s.parent.addEventListener('click', handleClick, false);\\n  }\\n\\n  return {\\n    init: function init(opts) {\\n      s = Object.assign({}, defaults, opts);\\n      bindUIActions();\\n    }\\n  };\\n};\\n\\nexports.default = scroller();\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/assets/javascript/factories/scroller.js\\n ** module id = 13\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/assets/javascript/factories/scroller.js?\");\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nfunction spy() {\\n  var s = void 0;\\n  var defaults = {\\n    selector: '[data-scroll]',\\n    offset: -90,\\n    activeClassName: 'sidebar__link--active'\\n  };\\n\\n  function getRects() {\\n    var targets = [].map.call(s.elementsToActivate, function (element) {\\n      var targetId = element.getAttribute(s.selector.replace(/[\\\\[\\\\]]/g, '')) || element.hash;\\n\\n      return targetId.substr(1);\\n    });\\n\\n    return targets.map(function (target) {\\n      var targetElement = document.getElementById(target);\\n      return !!targetElement && {\\n        rect: targetElement.getBoundingClientRect(),\\n        id: target\\n      };\\n    });\\n  }\\n\\n  function activate(id) {\\n    return [].forEach.call(s.elementsToActivate, function (element) {\\n      var targetToMatch = element.hash ? element.hash : element.getAttribute(s.selector.replace(/[\\\\[\\\\]]/g, ''));\\n      var isMatch = targetToMatch.substr(1) === id;\\n      var isActive = element.className.indexOf(s.activeClassName) > -1;\\n\\n      if (isMatch && isActive) {\\n        return;\\n      }\\n\\n      element.classList.remove(s.activeClassName);\\n      if (isMatch) {\\n        element.classList.add(s.activeClassName);\\n      }\\n    });\\n  }\\n\\n  function handleScroll() {\\n    var rects = getRects().filter(function (n) {\\n      return !!n;\\n    });\\n    var centerHeight = window.innerHeight / 2;\\n    rects.forEach(function (item) {\\n      var id = item.id;\\n      var rect = item.rect;\\n      var top = rect.top;\\n      var bottom = rect.bottom;\\n\\n\\n      if (centerHeight + s.offset >= top && centerHeight + s.offset <= bottom) {\\n        activate(id);\\n      }\\n    });\\n  }\\n\\n  function bindUIActions() {\\n    window.addEventListener('scroll', handleScroll, false);\\n    handleScroll();\\n  }\\n\\n  return {\\n    init: function init(opts) {\\n      s = Object.assign({}, defaults, opts);\\n      s.elementsToActivate = document.querySelectorAll(s.selector);\\n      bindUIActions();\\n    }\\n  };\\n}\\n\\nexports.default = spy();\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/assets/javascript/factories/spy.js\\n ** module id = 14\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/assets/javascript/factories/spy.js?\");\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nvar toggler = function toggler() {\\n  var s = void 0;\\n  var defaults = {\\n    button: document.getElementById('toggle'),\\n    overlay: document.getElementById('toggle-overlay'),\\n    query: 'data-scroll',\\n    menuParent: document.getElementById('nav'),\\n    visibleClass: 'sidebar-isVisible'\\n  };\\n\\n  function getAnchorElement(evtTarget) {\\n    var element = evtTarget;\\n\\n    while (element !== s.menuParent) {\\n      if (element.hasAttribute(s.query)) {\\n        return element;\\n      }\\n      element = element.parentNode;\\n    }\\n\\n    return null;\\n  }\\n\\n  function removeClass() {\\n    var _s = s;\\n    var visibleClass = _s.visibleClass;\\n\\n    document.body.classList.remove(visibleClass);\\n  }\\n\\n  function handleParentClick(e) {\\n    var menuItem = getAnchorElement(e.target);\\n\\n    if (menuItem) {\\n      return removeClass();\\n    }\\n\\n    return null;\\n  }\\n\\n  function handleToggle() {\\n    var _s2 = s;\\n    var visibleClass = _s2.visibleClass;\\n\\n    document.body.classList.toggle(visibleClass);\\n  }\\n\\n  function bindUIAction() {\\n    var _s3 = s;\\n    var button = _s3.button;\\n    var overlay = _s3.overlay;\\n    var menuParent = _s3.menuParent;\\n\\n    menuParent.onclick = handleParentClick.bind(this);\\n    button.onclick = handleToggle.bind(this);\\n    overlay.onclick = handleToggle.bind(this);\\n  }\\n\\n  return {\\n    init: function init(opts) {\\n      s = Object.assign({}, defaults, opts);\\n      bindUIAction();\\n    }\\n  };\\n};\\n\\nexports.default = toggler();\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/assets/javascript/factories/toggler.js\\n ** module id = 15\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/assets/javascript/factories/toggler.js?\");\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\teval(\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nfunction validator() {\\n  var formErrorList = void 0;\\n  var errorClass = 'form__input--error';\\n  var form = document.getElementById('formControl');\\n  var formName = document.getElementById('formName');\\n  var formEmail = document.getElementById('formEmail');\\n  var formMessage = document.getElementById('formMessage');\\n  var formErrorDialogue = document.getElementById('formErrorDialogue');\\n\\n  function validateRequired(element) {\\n    return !!element.value;\\n  }\\n\\n  function validateEmail(element) {\\n    var reEmail = /\\\\S+@\\\\S+\\\\.\\\\S+/;\\n    return reEmail.test(element.value);\\n  }\\n\\n  function validateLength(element) {\\n    return element.value.trim().length >= 20;\\n  }\\n\\n  var fields = {\\n    name: {\\n      element: formName,\\n      rules: [{\\n        fn: validateRequired,\\n        prompt: 'Please enter your name',\\n        dataKey: '1',\\n        hasError: null\\n      }]\\n    },\\n    email: {\\n      element: formEmail,\\n      rules: [{\\n        fn: validateRequired,\\n        prompt: 'Please enter your email',\\n        dataKey: '2',\\n        hasError: null\\n      }, {\\n        fn: validateEmail,\\n        prompt: \\\"That doesn't look like a valid email\\\",\\n        dataKey: '3',\\n        hasError: null\\n      }]\\n    },\\n    message: {\\n      element: formMessage,\\n      rules: [{\\n        fn: validateRequired,\\n        prompt: 'Please enter a message',\\n        dataKey: '4',\\n        hasError: null\\n      }, {\\n        fn: validateLength,\\n        prompt: 'Message must be at least 20 characters long',\\n        dataKey: '5',\\n        hasError: null\\n      }]\\n    }\\n  };\\n\\n  function checkField(field) {\\n    var element = field.element;\\n    var rules = field.rules;\\n\\n    var isHighlighted = element.className.indexOf(errorClass) > -1;\\n    var isValid = rules.every(function (rule) {\\n      return !rule.hasError;\\n    });\\n\\n    if (!isHighlighted && !isValid) {\\n      element.classList.add(errorClass);\\n    } else if (isHighlighted && isValid) {\\n      element.classList.remove(errorClass);\\n    }\\n  }\\n\\n  function removeError(rule) {\\n    var dataKey = rule.dataKey;\\n\\n    var children = formErrorList.querySelectorAll('[data-key]');\\n\\n    return [].forEach.call(children, function (child) {\\n      if (child.getAttribute('data-key') === dataKey) {\\n        child.classList.add('form__error-list-item--out');\\n        window.setTimeout(function () {\\n          formErrorList.removeChild(child);\\n        }, 350);\\n      }\\n\\n      if (children.length <= 1) {\\n        formErrorDialogue.removeChild(formErrorList);\\n      }\\n    });\\n  }\\n\\n  function appendError(rule) {\\n    var prompt = rule.prompt;\\n    var dataKey = rule.dataKey;\\n\\n    var errorListItem = document.createElement('li');\\n    var errorPrompt = document.createTextNode(prompt);\\n\\n    if (!formErrorList) {\\n      formErrorList = document.createElement('ul');\\n      formErrorList.className = 'form__error-list';\\n    }\\n\\n    errorListItem.dataset.key = dataKey;\\n    errorListItem.classList.add('form__error-list-item');\\n    errorListItem.appendChild(errorPrompt);\\n    formErrorList.appendChild(errorListItem);\\n    formErrorDialogue.appendChild(formErrorList);\\n  }\\n\\n  function handleSubmit(e) {\\n    var keys = Object.keys(fields);\\n    var validity = keys.map(function (key) {\\n      return fields[key].rules.map(function (rule, index) {\\n        var fn = rule.fn;\\n        var hasError = rule.hasError;\\n\\n        var currentField = fields[key];\\n        var currentElement = currentField.element;\\n        var isValid = fn(currentElement);\\n        if (!isValid && !hasError) {\\n          appendError(rule);\\n          currentField.rules[index].hasError = true;\\n        }\\n\\n        if (isValid && hasError) {\\n          removeError(rule);\\n          currentField.rules[index].hasError = false;\\n        }\\n\\n        checkField(currentField);\\n        return currentField.rules[index].hasError;\\n      });\\n    });\\n\\n    var canSubmit = validity.reduce(function (a, b) {\\n      return a.concat(b);\\n    }, []).every(function (n) {\\n      return !n;\\n    });\\n\\n    if (!canSubmit) {\\n      e.preventDefault();\\n      return false;\\n    }\\n\\n    return true;\\n  }\\n\\n  function handleUIActions() {\\n    form.addEventListener('submit', handleSubmit, false);\\n  }\\n\\n  return {\\n    init: function init() {\\n      handleUIActions();\\n    }\\n  };\\n}\\n\\nexports.default = validator();\\n\\n/*****************\\n ** WEBPACK FOOTER\\n ** ./src/assets/javascript/factories/validator.js\\n ** module id = 16\\n ** module chunks = 0\\n **/\\n//# sourceURL=webpack:///./src/assets/javascript/factories/validator.js?\");\n\n/***/ }\n/******/ ]);"],"sourceRoot":"/source/"}